<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0909.1159                               -->
<workbook original-version='18.1' source-build='2023.2.2 (20232.23.0909.1159)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Tableau 1)' inline='true' name='federated.0tcvy220jtgowh1aj6uja0xhysmy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau 1' name='excel-direct.0oajhvy1gqevy11ct44bb1hs93ww'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nabil/Downloads/Tableau 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0oajhvy1gqevy11ct44bb1hs93ww' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0oajhvy1gqevy11ct44bb1hs93ww' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FDB8E3DD2F2148C6B93617D6548B23AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FDB8E3DD2F2148C6B93617D6548B23AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_FDB8E3DD2F2148C6B93617D6548B23AB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_FDB8E3DD2F2148C6B93617D6548B23AB]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_FDB8E3DD2F2148C6B93617D6548B23AB'>
            <properties context=''>
              <relation connection='excel-direct.0oajhvy1gqevy11ct44bb1hs93ww' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau 2)' inline='true' name='federated.1t3kg5d1v03az518umxhm0wxb7v4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau 2' name='excel-direct.0cbn18a1mrzatl18dsg1017msxbu'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nabil/Downloads/Tableau 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0cbn18a1mrzatl18dsg1017msxbu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0cbn18a1mrzatl18dsg1017msxbu' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2756DCE711304066AB96348762CF7F97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2756DCE711304066AB96348762CF7F97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2756DCE711304066AB96348762CF7F97]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2756DCE711304066AB96348762CF7F97'>
            <properties context=''>
              <relation connection='excel-direct.0cbn18a1mrzatl18dsg1017msxbu' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau 3)' inline='true' name='federated.1ezzf4g09vl2wo15mymna09kmljl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau 3' name='excel-direct.1mulgsp1uw41e211ti6nn1ulde3w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nabil/Downloads/Tableau 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1mulgsp1uw41e211ti6nn1ulde3w' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='HighestPopulation' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='AffectedPeople' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1mulgsp1uw41e211ti6nn1ulde3w' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='HighestPopulation' ordinal='1' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
            <column datatype='real' name='AffectedPeople' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D256:no:A1:D256:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_249F9BBA50FC4234AE49C7E1DF2AF322]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestPopulation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestPopulation]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestPopulation</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_249F9BBA50FC4234AE49C7E1DF2AF322]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_249F9BBA50FC4234AE49C7E1DF2AF322]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AffectedPeople</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AffectedPeople]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>AffectedPeople</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_249F9BBA50FC4234AE49C7E1DF2AF322]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Affected People' datatype='real' name='[AffectedPeople]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Highest Population' datatype='integer' name='[HighestPopulation]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_249F9BBA50FC4234AE49C7E1DF2AF322]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_249F9BBA50FC4234AE49C7E1DF2AF322'>
            <properties context=''>
              <relation connection='excel-direct.1mulgsp1uw41e211ti6nn1ulde3w' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D256:no:A1:D256:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='HighestPopulation' ordinal='1' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='2' />
                  <column datatype='real' name='AffectedPeople' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau 4)' inline='true' name='federated.1f37qe01ln62lw1569e6g1pt1j7z' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau 4' name='excel-direct.1m1av890sy6zx115tkmcn15cu31d'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/nabil/Downloads/Tableau 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1m1av890sy6zx115tkmcn15cu31d' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='HighestPopulation' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='AffectedPeople' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1m1av890sy6zx115tkmcn15cu31d' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='date' name='date' ordinal='1' />
            <column datatype='integer' name='HighestPopulation' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='AffectedPeople' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77083CAAE97C46B58FCC7A8ED70E79B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77083CAAE97C46B58FCC7A8ED70E79B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestPopulation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestPopulation]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestPopulation</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77083CAAE97C46B58FCC7A8ED70E79B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77083CAAE97C46B58FCC7A8ED70E79B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AffectedPeople</remote-name>
            <remote-type>5</remote-type>
            <local-name>[AffectedPeople]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>AffectedPeople</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_77083CAAE97C46B58FCC7A8ED70E79B2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Affected People' datatype='real' name='[AffectedPeople]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column caption='Highest Population' datatype='integer' name='[HighestPopulation]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_77083CAAE97C46B58FCC7A8ED70E79B2]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Martin (French part)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_77083CAAE97C46B58FCC7A8ED70E79B2'>
            <properties context=''>
              <relation connection='excel-direct.1m1av890sy6zx115tkmcn15cu31d' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='date' name='date' ordinal='1' />
                  <column datatype='integer' name='HighestPopulation' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='AffectedPeople' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau 1)' name='federated.0tcvy220jtgowh1aj6uja0xhysmy' />
          </datasources>
          <datasource-dependencies datasource='federated.0tcvy220jtgowh1aj6uja0xhysmy'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tcvy220jtgowh1aj6uja0xhysmy].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0tcvy220jtgowh1aj6uja0xhysmy].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0tcvy220jtgowh1aj6uja0xhysmy].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0tcvy220jtgowh1aj6uja0xhysmy].[:Measure Names]' value='201' />
            <format attr='height' value='53' />
            <format attr='text-format' field='[federated.0tcvy220jtgowh1aj6uja0xhysmy].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:total_cases:qk]' value='N' />
            <format attr='text-format' field='[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:total_deaths:qk]' value='N' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
            <format attr='background-color' scope='cols' value='#dfedeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#faf4e7' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-color' value='#000000' />
            <format attr='stroke-size' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0tcvy220jtgowh1aj6uja0xhysmy].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='2.1988949775695801' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0tcvy220jtgowh1aj6uja0xhysmy].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{FF6B0CF9-5A1F-47EC-907B-8324C5CE33EB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths Per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau 2)' name='federated.1t3kg5d1v03az518umxhm0wxb7v4' />
          </datasources>
          <datasource-dependencies datasource='federated.1t3kg5d1v03az518umxhm0wxb7v4'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]' value='164' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#838fff' />
                <format attr='size' value='1.4942541122436523' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1t3kg5d1v03az518umxhm0wxb7v4].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{FB94AFF5-93E6-4D3C-90CF-974E854A8D22}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected Per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau 3)' name='federated.1ezzf4g09vl2wo15mymna09kmljl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ezzf4g09vl2wo15mymna09kmljl'>
            <column caption='Affected People' datatype='real' name='[AffectedPeople]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[AffectedPeople]' derivation='Sum' name='[sum:AffectedPeople:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ezzf4g09vl2wo15mymna09kmljl].[Longitude (generated)]' field-type='quantitative' max='10096364.04354959' min='-10096364.043549597' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ezzf4g09vl2wo15mymna09kmljl].[Latitude (generated)]' field-type='quantitative' max='5813802.3724955246' min='-5813802.3724955292' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ezzf4g09vl2wo15mymna09kmljl].[sum:AffectedPeople:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1ezzf4g09vl2wo15mymna09kmljl].[sum:AffectedPeople:qk]' value='Percent Population Infected Per Country'>
              <formatted-text>
                <run>Percent Population Infected Per Country</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ezzf4g09vl2wo15mymna09kmljl].[none:Location:nk]' />
              <color column='[federated.1ezzf4g09vl2wo15mymna09kmljl].[sum:AffectedPeople:qk]' />
              <geometry column='[federated.1ezzf4g09vl2wo15mymna09kmljl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ezzf4g09vl2wo15mymna09kmljl].[Latitude (generated)]</rows>
        <cols>[federated.1ezzf4g09vl2wo15mymna09kmljl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3E397952-93DA-4D4D-BD64-BE2293E03551}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau 4)' name='federated.1f37qe01ln62lw1569e6g1pt1j7z' />
          </datasources>
          <datasource-dependencies datasource='federated.1f37qe01ln62lw1569e6g1pt1j7z'>
            <column caption='Affected People' datatype='real' name='[AffectedPeople]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column-instance column='[AffectedPeople]' derivation='Avg' name='[avg:AffectedPeople:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[AffectedPeople]' derivation='Avg' forecast-column-base='[avg:AffectedPeople:qk]' forecast-column-type='forecast-value' name='[fVal:avg:AffectedPeople:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]' />
              <text column='[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]' />
              <color column='[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Forecast Indicator:nk]' />
              <text column='[federated.1f37qe01ln62lw1569e6g1pt1j7z].[fVal:avg:AffectedPeople:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1f37qe01ln62lw1569e6g1pt1j7z].[fVal:avg:AffectedPeople:qk]</rows>
        <cols>[federated.1f37qe01ln62lw1569e6g1pt1j7z].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{C3CF3AEB-499C-4B68-B3EB-8BA98C92B74A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='8' param='horz' type-v2='layout-flow' w='99036' x='482' y='940'>
            <zone h='98120' id='6' type-v2='layout-basic' w='99036' x='482' y='940'>
              <zone h='31022' id='3' name='Sheet 1' w='44725' x='482' y='68038'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='89307' id='5' name='Sheet 2' w='24050' x='45207' y='9753'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='73590' id='10' name='Sheet 3' w='30261' x='69257' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39953' id='12' name='Sheet 4' w='44725' x='482' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8813' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]' type-v2='color' w='24050' x='45207' y='940'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='27145' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]&#10;[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Forecast Indicator:nk]' type-v2='color' w='44725' x='482' y='40893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='24530' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1ezzf4g09vl2wo15mymna09kmljl].[sum:AffectedPeople:qk]' type-v2='color' w='30261' x='69257' y='74530'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='17' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='16' param='vert' type-v2='layout-flow' w='99036' x='482' y='940'>
                <zone fixed-size='280' h='39953' id='12' is-fixed='true' name='Sheet 4' w='44725' x='482' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='27145' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]&#10;[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Forecast Indicator:nk]' type-v2='color' w='44725' x='482' y='40893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73590' id='10' is-fixed='true' name='Sheet 3' w='30261' x='69257' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='24530' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1ezzf4g09vl2wo15mymna09kmljl].[sum:AffectedPeople:qk]' type-v2='color' w='30261' x='69257' y='74530'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89307' id='5' is-fixed='true' name='Sheet 2' w='24050' x='45207' y='9753'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8813' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]' type-v2='color' w='24050' x='45207' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='240' h='31022' id='3' is-fixed='true' name='Sheet 1' w='44725' x='482' y='68038'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{D2BD94D1-71B1-4065-BC87-F86AE212BEFF}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tcvy220jtgowh1aj6uja0xhysmy].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A75B97C5-DD62-43A5-9890-DC08E1F0D170}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1t3kg5d1v03az518umxhm0wxb7v4].[sum:TotalDeathCount:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A734C7D-6B28-49FA-BA44-1418E79D92CB}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ezzf4g09vl2wo15mymna09kmljl].[sum:AffectedPeople:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ezzf4g09vl2wo15mymna09kmljl].[none:Location:nk]</field>
            <field>[federated.1ezzf4g09vl2wo15mymna09kmljl].[sum:AffectedPeople:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D090A87-E37D-47B4-A635-D1939F04832C}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]&#10;[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Forecast Indicator:nk]</field>
            <field>[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]</field>
            <field>[federated.1f37qe01ln62lw1569e6g1pt1j7z].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4C8D21B-A48B-4C02-BE51-192F855BF3D9}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0tcvy220jtgowh1aj6uja0xhysmy].[:Measure Names]</field>
                    </x-fields>
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0tcvy220jtgowh1aj6uja0xhysmy].[:Measure Names]</field>
                    <field>[federated.0tcvy220jtgowh1aj6uja0xhysmy].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;[federated.0tcvy220jtgowh1aj6uja0xhysmy].[sum:total_deaths:qk]&quot;</value>
                  <value>7009248.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1t3kg5d1v03az518umxhm0wxb7v4].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Forecast Indicator:nk]</field>
              <field>[federated.1f37qe01ln62lw1569e6g1pt1j7z].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{09046714-C5D7-4C30-BACF-D4C55B63EF34}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='77' name='Sheet 1' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
